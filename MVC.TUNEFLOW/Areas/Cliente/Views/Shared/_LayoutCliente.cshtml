@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null; // Asegúrate de que este layout no use otro layout si no es intencional
}

<!DOCTYPE html>
<html lang="es" data-theme="dark">
@* `data-theme` se inicializa aquí y se controla con JS/CSS *@
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TuneFlow Cliente</title>

    <link rel="icon" type="image/png" href="~/img/logo.png" asp-append-version="true" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@400;600&display=swap" rel="stylesheet">

    <link rel="stylesheet" href="~/css/cliente.css" asp-append-version="true" />

</head>
<body class="cliente-body">
    @* Eliminé d-flex flex-column de aquí, lo maneja el CSS en body general *@

    <div class="cliente-layout">
        @* Este contenedor maneja el flex entre sidebar y main-wrapper *@
        <div class="cliente-sidebar">
            @* Eliminé d-flex flex-column justify-content-between de aquí, lo maneja el CSS *@
            <div>
                <div class="text-center my-3">
                    <img src="~/img/logo.png" alt="Logo TuneFlow" class="img-fluid" style="max-width: 90px;" asp-append-version="true" />
                </div>

                <nav class="nav flex-column">
                    <a class="nav-link" asp-area="Cliente" asp-controller="Panel" asp-action="Panel">Inicio</a>
                    <a class="nav-link" asp-area="Cliente" asp-controller="Buscar" asp-action="Index">Buscar</a>
                    <a class="nav-link" asp-area="Cliente" asp-controller="Descubre" asp-action="Index">Descubre</a>
                    <a class="nav-link" asp-area="Cliente" asp-controller="Biblioteca" asp-action="Index">Biblioteca</a>
                    <a class="nav-link" asp-area="Cliente" asp-controller="Seguimiento" asp-action="Index">Seguimientos</a>
                    <a class="nav-link" asp-area="Cliente" asp-controller="Perfil" asp-action="Index">Perfil</a>
                    <a class="nav-link" asp-area="Cliente" asp-controller="Playlist" asp-action="Index">Mis playlists</a>
                    <a class="nav-link" asp-area="Cliente" asp-controller="Cliente" asp-action="Details" asp-route-id="@ViewBag.IdCliente">Mi Cuenta</a>


                </nav>
            </div>

            <div class="theme-switch-wrapper mb-3">
                <span class="switch-label light-mode-label">Modo Claro</span>
                <label class="theme-switch">
                    <input type="checkbox" id="theme-toggle" />
                    <span class="slider"></span>
                </label>
                <span class="switch-label dark-mode-label">Modo Oscuro</span>
            </div>
        </div>

        <div class="main-wrapper">
            @* Las clases d-flex flex-grow-1 ya están en el CSS *@
            <div class="cliente-content">
                @* Las clases px-3 py-4 flex-grow-1 ya están en el CSS *@
                @RenderBody()
            </div>
        </div>
    </div>
    <form id="tokenForm" style="display:none;">
        @Html.AntiForgeryToken()
    </form>

    <div id="contenedorReproductor" style="display:none;">
        @await Html.PartialAsync("~/Areas/Cliente/Views/Reproductor/_Reproductor.cshtml")
    </div>
    <script src="~/js/cola.js"></script>
    <script src="~/js/pila.js?v=1.0.1"></script>
    <script src="~/js/reproductor.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/lib/jquery/dist/jquery-3.7.1.min.js" asp-append-version="true"></script>

    <script>
        // Script de tema (directamente en el layout para asegurar que se cargue primero)
        document.addEventListener('DOMContentLoaded', () => {
            const toggle = document.getElementById('theme-toggle');
            const html = document.documentElement; // Usar el elemento html para `data-theme`
            const lightLabel = document.querySelector('.light-mode-label');
            const darkLabel = document.querySelector('.dark-mode-label');

            function setTheme(theme) {
                html.setAttribute('data-theme', theme); // Cambia el atributo data-theme en <html>
                // Para compatibilidad con tu CSS, también puedes añadir/quitar la clase 'dark-mode' en <body>
                if (theme === 'dark') {
                    document.body.classList.add('dark-mode');
                } else {
                    document.body.classList.remove('dark-mode');
                }
                localStorage.setItem('theme', theme);

                // Actualizar las etiquetas de modo para resaltar el activo
                if (theme === 'dark') {
                    darkLabel.classList.add('active-mode');
                    lightLabel.classList.remove('active-mode');
                } else {
                    lightLabel.classList.add('active-mode');
                    darkLabel.classList.remove('active-mode');
                }
                // Dispara un evento personalizado para que otros scripts (como reproductor.js) puedan reaccionar
                document.dispatchEvent(new CustomEvent('themeChanged', { detail: theme }));
            }

            function loadTheme() {
                const saved = localStorage.getItem('theme');
                // Si no hay tema guardado o es 'dark', establecer 'dark' por defecto
                if (saved === 'light') {
                    toggle.checked = false; // Desmarcado para claro
                    setTheme('light');
                } else {
                    toggle.checked = true; // Marcado para oscuro (por defecto si no hay o es 'dark')
                    setTheme('dark');
                }
            }

            toggle.addEventListener('change', () => {
                const theme = toggle.checked ? 'dark' : 'light';
                setTheme(theme);
            });

            loadTheme(); // Cargar el tema al inicio
        });
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>