@model IEnumerable<Modelos.Tuneflow.Media.Song>

@{
    Layout = "~/Areas/Cliente/Views/Shared/_LayoutCliente.cshtml";
    ViewData["Title"] = "Buscar Canciones";
    var cancionesEnPlaylist = ViewBag.SongIdsEnPlaylist as List<int> ?? new List<int>();
}


@Html.AntiForgeryToken()

<div class="buscar-container">
    <h2 class="text-center mb-4">🎧 Buscar Canciones</h2>

    <form method="get" action="/Cliente/Buscar/Search2" class="search-form d-flex justify-content-center mb-4">
        <input type="text" name="nameSong" placeholder="Busca tu canción" class="form-control w-50" />
        <input type="hidden" name="idPlaylist" value="@ViewBag.IdPlaylist" />
        <button type="submit" class="btn btn-primary ms-2">Buscar</button>
    </form>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning text-center">No se encontraron canciones con ese título.</div>
    }
    else
    {
        <div class="table-responsive">
            <table class="results-table">
                <thead>
                    <tr>
                        <th>Portada</th>
                        <th>Título</th>
                        <th>Género</th>
                        <th>Artista</th>
                        <th>Explícito</th>
                        <th>Duración</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        bool enPlaylist = (ViewBag.SongIdsEnPlaylist as List<int>)?.Contains(item.Id) ?? false;

                        <tr>
                            <td>
                                <div class="reproductor-portada">
                                    <img src="@item.ImagePath" alt="Portada de @item.Title" />
                                </div>
                            </td>
                            <td>@item.Title</td>
                            <td>@item.Genre</td>
                            <td>
                                @if (item.Artist != null)
                                {
                                    <a href="/Artista/Perfil/Index?id=@item.Artist.Id&idCliente=@ViewBag.IdCliente" class="btn btn-primary btn-sm">
                                        @item.Artist.StageName
                                    </a>
                                }
                                else
                                {
                                    <span>Desconocido</span>
                                }
                            </td>
                            <td>@(item.ExplicitContent ? "Sí" : "No")</td>
                            <td>@item.TimeInMinutes(item.Duration)</td>
                            <td>
                                <!-- Botón para reproducir -->
                                <button class="btn btn-sm btn-success"
                                        onclick="reproducirCancion(
                            @item.Id,
                            '@item.Title',
                            '@item.FilePath',
                            '@item.ImagePath',
                            @ViewBag.IdCliente),
                            true">
                                    ▶ Reproducir
                                </button>

                                <!-- Botón para agregar o eliminar según si está en la playlist -->
                                <input type="hidden" name="idPlaylist" value="@ViewBag.IdPlaylist" />
                                @if (enPlaylist)
                                {
                                    <button class="btn btn-sm btn-danger ms-2"
                                            onclick="togglePlaylist(this, @item.Id, @ViewBag.IdPlaylist)">
                                        🗑️ Eliminar
                                    </button>
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-primary ms-2"
                                            onclick="togglePlaylist(this, @item.Id, @ViewBag.IdPlaylist)">
                                        ➕ Agregar
                                    </button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    }
</div>

<!-- Modal para reproductor -->
<div class="modal fade" id="detalleModal" tabindex="-1" aria-labelledby="detalleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="modalContent"></div>
    </div>
</div>

@section Scripts {
    <script>
               async function togglePlaylist(button, idCancion, idPlaylist) {
    try {
        const formData = new FormData();
        formData.append('idCancion', idCancion);
        formData.append('idPlaylist', idPlaylist);
        formData.append('__RequestVerificationToken', getAntiForgeryToken());

        const response = await fetch('/Cliente/Playlist/AddToPlaylist', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();

        if (response.ok) {
            alert(data.message);

            
            if(data.status === 'added') {
                button.textContent = '❌ Eliminar';
                button.classList.remove('btn-primary');
                button.classList.add('btn-danger');
            }
            else if(data.status === 'removed') {
                button.textContent = '➕ Agregar';
                button.classList.remove('btn-danger');
                button.classList.add('btn-primary');
            }
        } else {
            alert('Error: ' + data.message);
        }
    } catch (error) {
        alert('Error al conectar con el servidor');
        console.error(error);
    }
}


        function getAntiForgeryToken() {
            return document.querySelector('input[name="__RequestVerificationToken"]').value;
        }
    </script>
}
