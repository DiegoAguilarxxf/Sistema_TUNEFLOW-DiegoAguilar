@model Modelos.Tuneflow.Playlists.Playlist

@{
    Layout = "~/Areas/Cliente/Views/Shared/_LayoutCliente.cshtml";
    ViewData["Title"] = Model.Title;
}

@Html.AntiForgeryToken()

<div class="panel-container">
    <!-- CABECERA DE PLAYLIST -->
    <div class="playlist-header">
        <img src="@Model.PlaylistCover" alt="Portada" class="playlist-cover" />
        
        <div class="playlist-info">
            <div class="text-uppercase">Playlist</div>
            <div class="playlist-title">@Model.Title</div>

            <div class="playlist-buttons">
                <button class="btn-play-all" onclick="event.stopPropagation(); reproducirPlaylist(@Model.Id)">
                    ▶ Reproducir
                </button>
                <a href="@Url.Action("Search2", "Buscar", new { area = "Cliente", idPlaylist = ViewBag.IdPlaylist })"
                   class="btn-agregar">
                    ➕ Agregar canciones
                </a>
            </div>
        </div>
    </div>

    <!-- TABLA DE CANCIONES -->
    <div class="table-responsive">
        <table class="results-table">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Título</th>
                    <th>Artista</th>
                    <th>🔞</th>
                    <th>Duración</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Songs != null && Model.Songs.Any())
                {
                    int index = 1;
                    foreach (var cancion in Model.Songs)
                    {
                        <tr class="song-row" onclick="reproducirCancion(@cancion.Id)">
                            <td>@index</td>
                            <td class="d-flex align-items-center">
                                <img src="@cancion.ImagePath" alt="@cancion.Title" style="width:40px; height:40px; object-fit:cover; margin-right:8px;" />
                                <div>
                                    <div class="fw-bold">@cancion.Title</div>
                                    <div class="text-muted small">@cancion.Genre</div>
                                </div>
                            </td>
                            <td>
                                @if (cancion.Artist != null)
                                {
                                    <a href="/Artista/Perfil/Index?id=@cancion.Artist.Id&idCliente=@ViewBag.IdCliente" class="btn btn-primary btn-sm">
                                        @cancion.Artist.StageName
                                    </a>
                                }
                                else
                                {
                                    <span>Desconocido</span>
                                }
                            </td>
                            <td>@(cancion.ExplicitContent ? "Sí" : "No")</td>
                            <td>@cancion.TimeInMinutes(cancion.Duration)</td>
                            <td>
                                <button class="btn btn-sm btn-success" onclick="event.stopPropagation(); reproducirCancion(@cancion.Id,
                                                        '@cancion.Title',
                                                        '@cancion.FilePath',
                                                        '@cancion.ImagePath',
                                                        @ViewBag.IdCliente),
                                                        true">
                                    ▶
                                </button>

                                <form method="post"
                                      action="@Url.Action("DeleteSong", "Playlist", new { playlistId = Model.Id, songId = cancion.Id })"
                                      style="display:inline;"
                                      onsubmit="return confirm('¿Quieres eliminar esta canción de la playlist?');"
                                      onclick="event.stopPropagation();">
                                    <button type="submit" class="btn btn-sm btn-danger ms-1">
                                        🗑️
                                    </button>
                                </form>
                            </td>
                        </tr>
                        index++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="text-center text-muted">
                            Esta playlist no tiene canciones.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function reproducirCancion(id) {
        console.log("Reproducir canción ID:", id);
        
    }


    async function togglePlaylist(idCancion, idPlaylist) {
        try {
            const response = await fetch('/Cliente/Playlist/AddToPlaylist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': getAntiForgeryToken()
                },
                body: JSON.stringify({ idCancion, idPlaylist })
            });

            const data = await response.json();

            if (response.ok) {
                alert(data.message);
                // Aquí podrías actualizar la UI para reflejar el cambio
            } else {
                alert('Error: ' + data.message);
            }
        } catch (error) {
            alert('Error al conectar con el servidor');
            console.error(error);
        }
    }

    function getAntiForgeryToken() {
        const tokenInput = document.querySelector('input[name="__RequestVerificationToken"]');
        return tokenInput ? tokenInput.value : '';
    }
</script>
